#import <Preferences/Preferences.h>
#import <AVFoundation/AVAudioPlayer.h>

@interface SoundPage: PSListController{
}
@end

AVAudioPlayer *audioPlayer;

@implementation SoundPage

- (id)specifiers {
	if(_specifiers == nil) {
		_specifiers = [[self loadSpecifiersFromPlistName:@"SoundPage" target:self] retain];
    UIBarButtonItem *previewButton([[UIBarButtonItem alloc] initWithTitle:@"Preview" style:UIBarButtonItemStyleDone target:self action:@selector(preview:)]);
	previewButton.tag = 1;
	[[self navigationItem] setRightBarButtonItem:previewButton];
	[previewButton release];
	}
	return _specifiers;
}

-(void)stopAudio{

if(audioPlayer && [audioPlayer isPlaying]){
    [audioPlayer stop];
    audioPlayer=nil;
    }
}

- (IBAction)preview:(UIBarButtonItem *)item {

	[self stopAudio];

	#define APEX @"/var/mobile/Library/VibrateOnStart/Apex.caf"
	#define BEACON @"/var/mobile/Library/VibrateOnStart/Beacon.caf"
	#define BULLETIN @"/var/mobile/Library/VibrateOnStart/Bulletin.caf"
	#define BYTHESEASIDE @"/var/mobile/Library/VibrateOnStart/By The Seaside.caf"
	#define CHIMES @"/var/mobile/Library/VibrateOnStart/Chimes.caf"
	#define CIRCUIT @"/var/mobile/Library/VibrateOnStart/Circuit.caf"
	#define CONSTELLATION @"/var/mobile/Library/VibrateOnStart/Constellation.caf"
	#define COSMIC @"/var/mobile/Library/VibrateOnStart/Cosmic.caf"
	#define CRYSTALS @"/var/mobile/Library/VibrateOnStart/Crystals.caf"
	#define HILLSIDE @"/var/mobile/Library/VibrateOnStart/Hillside.caf"
	#define ILLUMINATE @"/var/mobile/Library/VibrateOnStart/Illuminate.caf"
	#define NIGHTOWL @"/var/mobile/Library/VibrateOnStart/Night Owl.caf"
	#define OPENING @"/var/mobile/Library/VibrateOnStart/Opening.caf"
	#define PLAYTIME @"/var/mobile/Library/VibrateOnStart/Playtime.caf"
	#define PRESTO @"/var/mobile/Library/VibrateOnStart/Presto.caf"
	#define RADAR @"/var/mobile/Library/VibrateOnStart/Radar.caf"
	#define RADIATE @"/var/mobile/Library/VibrateOnStart/Radiate.caf"
	#define RIPPLES @"/var/mobile/Library/VibrateOnStart/Ripples.caf"
	#define SENCHA @"/var/mobile/Library/VibrateOnStart/Sencha.caf"
	#define SIGNAL @"/var/mobile/Library/VibrateOnStart/Signal.caf"
	#define SILK @"/var/mobile/Library/VibrateOnStart/Silk.caf"
	#define SLOWRISE @"/var/mobile/Library/VibrateOnStart/Slow Rise.caf"
	#define STARGAZE @"/var/mobile/Library/VibrateOnStart/Stargaze.caf"
	#define SUMMIT @"/var/mobile/Library/VibrateOnStart/Summit.caf"
	#define TWINKLE @"/var/mobile/Library/VibrateOnStart/Twinkle.caf"
	#define UPLIFT @"/var/mobile/Library/VibrateOnStart/Uplift.caf"
	#define WAVES @"/var/mobile/Library/VibrateOnStart/Waves.caf"

	#define AURORA @"/var/mobile/Library/VibrateOnStart/Aurora.caf"
	#define BAMBOO @"/var/mobile/Library/VibrateOnStart/Bamboo.caf"
	#define CHORD @"/var/mobile/Library/VibrateOnStart/Chord.caf"
	#define CIRCLES @"/var/mobile/Library/VibrateOnStart/Circles.caf"
	#define COMPLETE @"/var/mobile/Library/VibrateOnStart/Complete.caf"
	#define HELLO @"/var/mobile/Library/VibrateOnStart/Hello.caf"
	#define INPUT @"/var/mobile/Library/VibrateOnStart/Input.caf"
	#define KEYS @"/var/mobile/Library/VibrateOnStart/Keys.caf"
	#define NOTE @"/var/mobile/Library/VibrateOnStart/Note.caf"
	#define POPCORN @"/var/mobile/Library/VibrateOnStart/Popcorn.caf"
	#define PULSE @"/var/mobile/Library/VibrateOnStart/Pulse.caf"
	#define SYNTH @"/var/mobile/Library/VibrateOnStart/Synth.caf"

	#define BEEP @"/var/mobile/Library/VibrateOnStart/Beep.caf"
	#define MAC @"/var/mobile/Library/VibrateOnStart/Mac.caf"
	#define UBUNTU @"/var/mobile/Library/VibrateOnStart/Ubuntu.caf"


	NSURL *apexurl = [NSURL fileURLWithPath:[NSString stringWithFormat:APEX]];
	NSURL *beaconurl = [NSURL fileURLWithPath:[NSString stringWithFormat:BEACON]];
	NSURL *bulletinurl = [NSURL fileURLWithPath:[NSString stringWithFormat:BULLETIN]];
	NSURL *bytheseasideurl = [NSURL fileURLWithPath:[NSString stringWithFormat:BYTHESEASIDE]];
	NSURL *chimesurl = [NSURL fileURLWithPath:[NSString stringWithFormat:CHIMES]];
	NSURL *circuiturl = [NSURL fileURLWithPath:[NSString stringWithFormat:CIRCUIT]];
	NSURL *constellationurl = [NSURL fileURLWithPath:[NSString stringWithFormat:CONSTELLATION]];
	NSURL *cosmicurl = [NSURL fileURLWithPath:[NSString stringWithFormat:COSMIC]];
	NSURL *crystalsurl = [NSURL fileURLWithPath:[NSString stringWithFormat:CRYSTALS]];
	NSURL *hillsideurl = [NSURL fileURLWithPath:[NSString stringWithFormat:HILLSIDE]];
	NSURL *illuminateurl = [NSURL fileURLWithPath:[NSString stringWithFormat:ILLUMINATE]];
	NSURL *nightowlurl = [NSURL fileURLWithPath:[NSString stringWithFormat:NIGHTOWL]];
	NSURL *openingurl = [NSURL fileURLWithPath:[NSString stringWithFormat:OPENING]];
	NSURL *playtimeurl = [NSURL fileURLWithPath:[NSString stringWithFormat:PLAYTIME]];
	NSURL *prestourl = [NSURL fileURLWithPath:[NSString stringWithFormat:PRESTO]];
	NSURL *radarurl = [NSURL fileURLWithPath:[NSString stringWithFormat:RADAR]];
	NSURL *radiateurl = [NSURL fileURLWithPath:[NSString stringWithFormat:RADIATE]];
	NSURL *ripplesurl = [NSURL fileURLWithPath:[NSString stringWithFormat:RIPPLES]];
	NSURL *senchaurl = [NSURL fileURLWithPath:[NSString stringWithFormat:SENCHA]];
	NSURL *signalurl = [NSURL fileURLWithPath:[NSString stringWithFormat:SIGNAL]];
	NSURL *silkurl = [NSURL fileURLWithPath:[NSString stringWithFormat:SILK]];
	NSURL *slowriseurl = [NSURL fileURLWithPath:[NSString stringWithFormat:SLOWRISE]];
	NSURL *stargazeurl = [NSURL fileURLWithPath:[NSString stringWithFormat:STARGAZE]];
	NSURL *summiturl = [NSURL fileURLWithPath:[NSString stringWithFormat:SUMMIT]];
	NSURL *twinkleurl = [NSURL fileURLWithPath:[NSString stringWithFormat:TWINKLE]];
	NSURL *uplifturl = [NSURL fileURLWithPath:[NSString stringWithFormat:UPLIFT]];
	NSURL *wavesurl = [NSURL fileURLWithPath:[NSString stringWithFormat:WAVES]];

	NSURL *auroraurl = [NSURL fileURLWithPath:[NSString stringWithFormat:AURORA]];
	NSURL *bamboourl = [NSURL fileURLWithPath:[NSString stringWithFormat:BAMBOO]];
	NSURL *chordurl = [NSURL fileURLWithPath:[NSString stringWithFormat:CHORD]];
	NSURL *circlesurl = [NSURL fileURLWithPath:[NSString stringWithFormat:CIRCLES]];
	NSURL *completeurl = [NSURL fileURLWithPath:[NSString stringWithFormat:COMPLETE]];
	NSURL *hellourl = [NSURL fileURLWithPath:[NSString stringWithFormat:HELLO]];
	NSURL *inputurl = [NSURL fileURLWithPath:[NSString stringWithFormat:INPUT]];
	NSURL *keysurl = [NSURL fileURLWithPath:[NSString stringWithFormat:KEYS]];
	NSURL *noteurl = [NSURL fileURLWithPath:[NSString stringWithFormat:NOTE]];
	NSURL *popcornurl = [NSURL fileURLWithPath:[NSString stringWithFormat:POPCORN]];
	NSURL *pulseurl = [NSURL fileURLWithPath:[NSString stringWithFormat:PULSE]];
	NSURL *synthurl = [NSURL fileURLWithPath:[NSString stringWithFormat:SYNTH]];

	NSURL *macurl = [NSURL fileURLWithPath:[NSString stringWithFormat:MAC]];
	NSURL *beepurl = [NSURL fileURLWithPath:[NSString stringWithFormat:BEEP]];
	NSURL *ubuntuurl = [NSURL fileURLWithPath:[NSString stringWithFormat:UBUNTU]];

	NSMutableDictionary *prefs = [[NSMutableDictionary alloc] initWithContentsOfFile:@"/var/mobile/Library/Preferences/com.ziph0n.vibrateonstart.plist"];

    switch ([[prefs objectForKey:@"SoundList"] intValue]) {

    case 1: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:apexurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 2: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:beaconurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 3: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:bulletinurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 4: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:bytheseasideurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 5: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:chimesurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 6: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:circuiturl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 7: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:constellationurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 8: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:cosmicurl error:nil];
      [audioPlayer stop];
      audioPlayer.numberOfLoops = 1;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 9: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:crystalsurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 10: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:hillsideurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 11: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:illuminateurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 12: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:nightowlurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 13: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:openingurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 14: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:playtimeurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 15: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:prestourl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 16: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:radarurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 17: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:radiateurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 18: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:ripplesurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 19: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:senchaurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 20: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:signalurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 21: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:silkurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 22: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:slowriseurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 23: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:stargazeurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 24: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:summiturl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 25: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:twinkleurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 26: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:uplifturl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 27: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:wavesurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 28: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:auroraurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 29: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:bamboourl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 30: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:chordurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 31: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:circlesurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 32: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:completeurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 33: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:hellourl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 34: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:inputurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 35: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:keysurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 36: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:noteurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 37: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:popcornurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 38: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:pulseurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 39: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:synthurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 40: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:macurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 41: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:beepurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }

    case 42: {
      audioPlayer = [[AVAudioPlayer alloc] initWithContentsOfURL:ubuntuurl error:nil];
      audioPlayer.numberOfLoops = 0;
      audioPlayer.volume = 1.0;
      [audioPlayer play];
    break;
    }
  }
}

@end

// vim:ft=objc